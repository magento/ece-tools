diff --git a/vendor/magento/framework/App/Cache/Frontend/Factory.php b/vendor/magento/framework/App/Cache/Frontend/Factory.php
index a71ff27b07..e1c65ef572 100644
--- a/vendor/magento/framework/App/Cache/Frontend/Factory.php
+++ b/vendor/magento/framework/App/Cache/Frontend/Factory.php
@@ -1,6 +1,6 @@
 <?php
 /**
- * Copyright © 2013-2017 Magento, Inc. All rights reserved.
+ * Copyright © Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
 
@@ -145,15 +145,17 @@ class Factory
         $result = $this->_objectManager->create(
             'Magento\Framework\Cache\Frontend\Adapter\Zend',
             [
-                'frontend' => \Zend_Cache::factory(
-                    $frontend['type'],
-                    $backend['type'],
-                    $frontend,
-                    $backend['options'],
-                    true,
-                    true,
-                    true
-                )
+                'frontendFactory' => function () use ($frontend, $backend) {
+                    return \Zend_Cache::factory(
+                        $frontend['type'],
+                        $backend['type'],
+                        $frontend,
+                        $backend['options'],
+                        true,
+                        true,
+                        true
+                    );
+                }
             ]
         );
         $result = $this->_applyDecorators($result);
diff --git a/vendor/magento/framework/Cache/Frontend/Adapter/Zend.php b/vendor/magento/framework/Cache/Frontend/Adapter/Zend.php
index 5d72ee6a1e..f99468b20a 100644
--- a/vendor/magento/framework/Cache/Frontend/Adapter/Zend.php
+++ b/vendor/magento/framework/Cache/Frontend/Adapter/Zend.php
@@ -1,6 +1,6 @@
 <?php
 /**
- * Copyright © 2013-2017 Magento, Inc. All rights reserved.
+ * Copyright © Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
 namespace Magento\Framework\Cache\Frontend\Adapter;
@@ -16,11 +16,27 @@ class Zend implements \Magento\Framework\Cache\FrontendInterface
     protected $_frontend;
 
     /**
-     * @param \Zend_Cache_Core $frontend
+     * Factory that creates the \Zend_Cache_Cores
+     *
+     * @var \Closure
+     */
+    protected $_frontendFactory;
+
+    /**
+     * The pid that owns the $_frontend object
+     *
+     * @var int
      */
-    public function __construct(\Zend_Cache_Core $frontend)
+    protected $_pid;
+
+    /**
+     * @param \Closure $frontendFactory
+     */
+    public function __construct(\Closure $frontendFactory)
     {
-        $this->_frontend = $frontend;
+        $this->_frontendFactory = $frontendFactory;
+        $this->_frontend = $frontendFactory();
+        $this->_pid = getmypid();
     }
 
     /**
@@ -28,7 +44,7 @@ class Zend implements \Magento\Framework\Cache\FrontendInterface
      */
     public function test($identifier)
     {
-        return $this->_frontend->test($this->_unifyId($identifier));
+        return $this->_getFrontEnd()->test($this->_unifyId($identifier));
     }
 
     /**
@@ -36,7 +52,7 @@ class Zend implements \Magento\Framework\Cache\FrontendInterface
      */
     public function load($identifier)
     {
-        return $this->_frontend->load($this->_unifyId($identifier));
+        return $this->_getFrontEnd()->load($this->_unifyId($identifier));
     }
 
     /**
@@ -44,7 +60,7 @@ class Zend implements \Magento\Framework\Cache\FrontendInterface
      */
     public function save($data, $identifier, array $tags = [], $lifeTime = null)
     {
-        return $this->_frontend->save($data, $this->_unifyId($identifier), $this->_unifyIds($tags), $lifeTime);
+        return $this->_getFrontEnd()->save($data, $this->_unifyId($identifier), $this->_unifyIds($tags), $lifeTime);
     }
 
     /**
@@ -52,7 +68,7 @@ class Zend implements \Magento\Framework\Cache\FrontendInterface
      */
     public function remove($identifier)
     {
-        return $this->_frontend->remove($this->_unifyId($identifier));
+        return $this->_getFrontEnd()->remove($this->_unifyId($identifier));
     }
 
     /**
@@ -76,7 +92,7 @@ class Zend implements \Magento\Framework\Cache\FrontendInterface
                 "Magento cache frontend does not support the cleaning mode '{$mode}'."
             );
         }
-        return $this->_frontend->clean($mode, $this->_unifyIds($tags));
+        return $this->_getFrontEnd()->clean($mode, $this->_unifyIds($tags));
     }
 
     /**
@@ -84,7 +100,7 @@ class Zend implements \Magento\Framework\Cache\FrontendInterface
      */
     public function getBackend()
     {
-        return $this->_frontend->getBackend();
+        return $this->_getFrontEnd()->getBackend();
     }
 
     /**
@@ -92,7 +108,7 @@ class Zend implements \Magento\Framework\Cache\FrontendInterface
      */
     public function getLowLevelFrontend()
     {
-        return $this->_frontend;
+        return $this->_getFrontEnd();
     }
 
     /**
@@ -119,4 +135,20 @@ class Zend implements \Magento\Framework\Cache\FrontendInterface
         }
         return $ids;
     }
+
+    /**
+     * getter for _frontend so that we can support fork()s
+     *
+     * @return \Zend_Cache_Core
+     */
+    protected function _getFrontEnd()
+    {
+        if (getmypid() === $this->_pid) {
+            return $this->_frontend;
+        }
+        $frontendFactory = $this->_frontendFactory;
+        $this->_frontend = $frontendFactory();
+        $this->_pid = getmypid();
+        return $this->_frontend;
+    }
 }
