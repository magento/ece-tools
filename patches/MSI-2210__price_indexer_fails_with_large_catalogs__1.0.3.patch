diff -Nuar a/vendor/magento/module-inventory-catalog/Plugin/CatalogInventory/Model/Indexer/ModifySelectInProductPriceIndexFilter.php b/vendor/magento/module-inventory-catalog/Plugin/CatalogInventory/Model/Indexer/ModifySelectInProductPriceIndexFilter.php
--- a/vendor/magento/module-inventory-catalog/Plugin/CatalogInventory/Model/Indexer/ModifySelectInProductPriceIndexFilter.php
+++ b/vendor/magento/module-inventory-catalog/Plugin/CatalogInventory/Model/Indexer/ModifySelectInProductPriceIndexFilter.php
@@ -11,6 +11,8 @@
 use Magento\CatalogInventory\Api\StockConfigurationInterface;
 use Magento\CatalogInventory\Model\Indexer\ProductPriceIndexFilter;
 use Magento\Framework\App\ResourceConnection;
+use Magento\InventoryApi\Api\Data\StockInterface;
+use Magento\InventoryCatalogApi\Api\DefaultStockProviderInterface;
 use Magento\InventoryIndexer\Model\StockIndexTableNameResolverInterface;
 use Magento\InventorySalesApi\Model\StockByWebsiteIdResolverInterface;

@@ -39,22 +41,30 @@ class ModifySelectInProductPriceIndexFilter
      */
     private $stockByWebsiteIdResolver;

+    /**
+     * @var DefaultStockProviderInterface
+     */
+    private $defaultStockProvider;
+
     /**
      * @param StockIndexTableNameResolverInterface $stockIndexTableNameResolver
      * @param StockConfigurationInterface $stockConfiguration
      * @param ResourceConnection $resourceConnection
      * @param StockByWebsiteIdResolverInterface $stockByWebsiteIdResolver
+     * @param DefaultStockProviderInterface $defaultStockProvider
      */
     public function __construct(
         StockIndexTableNameResolverInterface $stockIndexTableNameResolver,
         StockConfigurationInterface $stockConfiguration,
         ResourceConnection $resourceConnection,
-        StockByWebsiteIdResolverInterface $stockByWebsiteIdResolver
+        StockByWebsiteIdResolverInterface $stockByWebsiteIdResolver,
+        DefaultStockProviderInterface $defaultStockProvider
     ) {
         $this->stockIndexTableNameResolver = $stockIndexTableNameResolver;
         $this->stockConfiguration = $stockConfiguration;
         $this->resourceConnection = $resourceConnection;
         $this->stockByWebsiteIdResolver = $stockByWebsiteIdResolver;
+        $this->defaultStockProvider = $defaultStockProvider;
     }

     /**
@@ -84,7 +94,8 @@ public function aroundModifyPrice(
             $select->from(['price_index' => $priceTable->getTableName()], []);
             $priceEntityField = $priceTable->getEntityField();

-            if ($this->resourceConnection->getConnection()->isTableExists($stockTable)) {
+            if (!$this->isDefaultStock($stock)
+                && $this->resourceConnection->getConnection()->isTableExists($stockTable)) {
                 $select->joinInner(
                     ['product_entity' => $this->resourceConnection->getTableName('catalog_product_entity')],
                     "product_entity.entity_id = price_index.{$priceEntityField}",
@@ -95,6 +106,17 @@ public function aroundModifyPrice(
                     []
                 );
                 $select->where('inventory_stock.is_salable = 0 OR inventory_stock.is_salable IS NULL');
+            } else {
+                $legacyStockTableName = $this->resourceConnection->getTableName('cataloginventory_stock_status');
+                $select->joinLeft(
+                    ['stock_status' => $legacyStockTableName],
+                    sprintf(
+                        'stock_status.product_id = price_index.%s',
+                        $priceEntityField
+                    ),
+                    []
+                );
+                $select->where('stock_status.stock_status = 0 OR stock_status.stock_status IS NULL');
             }

             $select->where('price_index.website_id = ?', $websiteId);
@@ -126,4 +148,15 @@ private function getWebsiteIdsFromProducts(array $entityIds): array

         return $result;
     }
+
+    /**
+     * Checks if inventory stock is DB view
+     *
+     * @param StockInterface $stock
+     * @return bool
+     */
+    private function isDefaultStock(StockInterface $stock): bool
+    {
+        return (int)$stock->getStockId() === $this->defaultStockProvider->getId();
+    }
 }
