<+>UTF-8
===================================================================
diff -Nuar a/vendor/magento/module-braintree/Gateway/Request/ChannelDataBuilder.php b/vendor/magento/module-braintree/Gateway/Request/ChannelDataBuilder.php
--- a/vendor/magento/module-braintree/Gateway/Request/ChannelDataBuilder.php
+++ b/vendor/magento/module-braintree/Gateway/Request/ChannelDataBuilder.php
@@ -26,7 +26,7 @@
     /**
      * @var string
      */
-    private static $channelValue = 'Magento2_Cart_%s_BT';
+    private static $channelValue = 'Magento_Enterprise_Cloud_BT';
 
     /**
      * Constructor
@@ -44,7 +44,7 @@
     public function build(array $buildSubject)
     {
         return [
-            self::$channel => sprintf(self::$channelValue, $this->productMetadata->getEdition())
+            self::$channel => self::$channelValue
         ];
     }
 }
<+>UTF-8
===================================================================
diff -Nuar a/vendor/magento/module-braintree/Test/Unit/Gateway/Request/ChannelDataBuilderTest.php b/vendor/magento/module-braintree/Test/Unit/Gateway/Request/ChannelDataBuilderTest.php
--- a/vendor/magento/module-braintree/Test/Unit/Gateway/Request/ChannelDataBuilderTest.php
+++ b/vendor/magento/module-braintree/Test/Unit/Gateway/Request/ChannelDataBuilderTest.php
@@ -40,7 +40,7 @@
     public function testBuild($edition, array $expected)
     {
         $buildSubject = [];
-        $this->productMetadataMock->expects(static::once())
+        $this->productMetadataMock->expects(static::never())
             ->method('getEdition')
             ->willReturn($edition);
 
@@ -54,8 +54,8 @@
     public function buildDataProvider()
     {
         return [
-            ['FirstEdition', ['channel' => 'Magento2_Cart_FirstEdition_BT']],
-            ['SecondEdition', ['channel' => 'Magento2_Cart_SecondEdition_BT']],
+            ['FirstEdition', ['channel' => 'Magento_Enterprise_Cloud_BT']],
+            ['SecondEdition', ['channel' => 'Magento_Enterprise_Cloud_BT']],
         ];
     }
 }
<+>UTF-8
===================================================================
diff -Nuar a/vendor/magento/module-paypal/Model/AbstractConfig.php b/vendor/magento/module-paypal/Model/AbstractConfig.php
--- a/vendor/magento/module-paypal/Model/AbstractConfig.php
+++ b/vendor/magento/module-paypal/Model/AbstractConfig.php
@@ -59,7 +59,7 @@
     /**
      * @var string
      */
-    private static $bnCode = 'Magento_Cart_%s';
+    private static $bnCode = 'Magento_Enterprise_Cloud';
 
     /**
      * @param \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig
@@ -335,7 +335,7 @@
      */
     public function getBuildNotationCode()
     {
-        return sprintf(self::$bnCode, $this->getProductMetadata()->getEdition());
+        return self::$bnCode;
     }
 
     /**
<+>UTF-8
===================================================================
diff -Nuar a/vendor/magento/module-paypal/Test/Unit/Model/AbstractConfigTest.php b/vendor/magento/module-paypal/Test/Unit/Model/AbstractConfigTest.php
--- a/vendor/magento/module-paypal/Test/Unit/Model/AbstractConfigTest.php
+++ b/vendor/magento/module-paypal/Test/Unit/Model/AbstractConfigTest.php
@@ -293,7 +293,7 @@
     public function testGetBuildNotationCode()
     {
         $productMetadata = $this->getMock(ProductMetadataInterface::class, [], [], '', false);
-        $productMetadata->expects($this->once())
+        $productMetadata->expects($this->never())
             ->method('getEdition')
             ->will($this->returnValue('SomeEdition'));
 
@@ -304,6 +304,6 @@
             $productMetadata
         );
 
-        $this->assertEquals('Magento_Cart_SomeEdition', $this->config->getBuildNotationCode());
+        $this->assertEquals('Magento_Enterprise_Cloud', $this->config->getBuildNotationCode());
     }
 }
